<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.0.3">Jekyll</generator>
<link href="/feed.xml" rel="self" type="application/atom+xml" />
<link href="/" rel="alternate" type="text/html" />
<updated>2016-02-16T10:17:38-05:00</updated>
<id>/</id>
<entry>
<title>RSiteCatalyst</title>
<link href="/r/rsitecatalyst.html" rel="alternate" type="text/html" title="RSiteCatalyst" />
<published>2016-02-01T00:00:00-05:00</published>
<updated>2016-02-01T00:00:00-05:00</updated>
<id>/r/rsitecatalyst</id>
<content type="html" xml:base="/r/rsitecatalyst.html">&lt;p&gt;An R package for accessing the Adobe Analytics Reporting API.&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://cran.r-project.org/package=RSiteCatalyst&quot;&gt;https://cran.r-project.org/package=RSiteCatalyst&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/randyzwitch/RSiteCatalyst&quot;&gt;https://github.com/randyzwitch/RSiteCatalyst&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;http://randyzwitch.com/rsitecatalyst/&quot;&gt;http://randyzwitch.com/rsitecatalyst/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;https://marketing.adobe.com/developer/en_US/documentation&quot;&gt;https://marketing.adobe.com/developer/en_US/documentation&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://33sticks.com/rsitecatalyst-market-basket-analysis-adobe-analytics/&quot;&gt;Market Basket Analysis With Adobe Analytics And RSiteCatalyst&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.computerworld.com/article/2921176/business-intelligence/great-r-packages-for-data-import-wrangling-visualization.html&quot;&gt;Great R packages for data import, wrangling &amp;amp; visualization&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/anomaly-detection-adobe-analytics-api/&quot;&gt;Anomaly Detection Using The Adobe Analytics API&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.milanor.net/blog/?p=1730&quot;&gt;Adobe Sitecatalyst API and R: integrate reports with the SAINT classification file&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://chrisnart.blogspot.com/2014/03/date-based-cohort-analysis-for-adobe.html&quot;&gt;Date Based Cohort Analysis for Adobe SiteCatalyst using R&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.madridgeekgirls.es/rsitecatalyst-o-como-conectar-r-con-sitecatalyst-de-adobe/&quot;&gt;RSiteCatalyst o cómo conectar R con SiteCatalyst de Adobe&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/real-time-reporting-adobe-analytics-api/&quot;&gt;Real-time Reporting with the Adobe Analytics API&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/rsitecatalyst-website-pathing-sankey-charts/&quot;&gt;Visualizing Website Pathing With Sankey Charts&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/rsitecatalyst-d3-network-graphs/&quot;&gt;Visualizing Website Structure With Network Graphs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/adobe-analytics-implementation-documentation/&quot;&gt;Adobe Analytics Implementation Documentation in 60 Seconds&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/rsitecatalyst-k-means-clustering/&quot;&gt;Clustering Search Keywords Using K-Means Clustering&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://community.alteryx.com/t5/Data-Sources/Anyone-successfully-using-Rtool-to-connect-to-Adobe-Analytics/td-p/5400&quot;&gt;Anyone successfully using Rtool to connect to Adobe Analytics?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://blogs.adobe.com/digitalmarketing/analytics/playing-hits-summit-2014-filtered-metrics-error-monitoring/&quot;&gt;Playing the Hits at Summit 2014: Filtered Metrics, Error Monitoring, and More&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.tatvic.com/blog/q-a-from-our-webinar-how-to-perform-predictive-analytics-on-your-web-analytics-tool-data/&quot;&gt;Q &amp;amp; A from our webinar “How to perform Predictive Analytics on your Web Analytics Tool Data”&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://analyticsdemystified.com/analysis/so-r-we-ready-for-r-with-adobe/&quot;&gt;So, R We Ready For R With Adobe Analytics?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
<category term="R" />
<summary>An R package for accessing the Adobe Analytics Reporting API.</summary>
</entry>
<entry>
<title>Vega.jl</title>
<link href="/julia/vega.html" rel="alternate" type="text/html" title="Vega.jl" />
<published>2016-01-31T00:00:00-05:00</published>
<updated>2016-01-31T00:00:00-05:00</updated>
<id>/julia/vega</id>
<content type="html" xml:base="/julia/vega.html">&lt;p&gt;A Julia package for generating interactive visualizations, using &lt;a href=&quot;http://vega.github.io/vega/&quot;&gt;Vega.js&lt;/a&gt; as the underlying visualization engine. Vega.jl can be run from the Julia REPL, from inside &lt;a href=&quot;http://jupyter.org/&quot;&gt;Jupyter Notebook&lt;/a&gt;, and also works with &lt;a href=&quot;https://github.com/JuliaLang/Interact.jl&quot;&gt;Interact.jl&lt;/a&gt; and &lt;a href=&quot;http://escher-jl.org/&quot;&gt;Escher.jl&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/johnmyleswhite/Vega.jl&quot;&gt;https://github.com/johnmyleswhite/Vega.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;http://johnmyleswhite.github.io/Vega.jl/&quot;&gt;http://johnmyleswhite.github.io/Vega.jl/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;https://github.com/vega/vega/wiki&quot;&gt;https://github.com/vega/vega/wiki&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/juliacon-2015-everyday-analytics-and-visualization-video/&quot;&gt;JuliaCon 2015: Everyday Analytics and Visualization (video)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://randyzwitch.com/vega-jl-julia/&quot;&gt;Vega.jl Rebooted – Now with 100% More Pie and Donut Charts!&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
<category term="Julia" />
<summary>A Julia package for generating interactive visualizations, using Vega.js as the underlying visualization engine. Vega.jl can be run from the Julia REPL, from inside Jupyter Notebook, and also works with Interact.jl and Escher.jl.</summary>
</entry>
<entry>
<title>NoveltyColors.jl</title>
<link href="/julia/noveltycolors.html" rel="alternate" type="text/html" title="NoveltyColors.jl" />
<published>2016-01-29T00:00:00-05:00</published>
<updated>2016-01-29T00:00:00-05:00</updated>
<id>/julia/noveltycolors</id>
<content type="html" xml:base="/julia/noveltycolors.html">&lt;p&gt;A Julia package for fun, non-standard color palettes. Color palettes range from fashion, to movie directors and even community-sourced contributions.&lt;/p&gt;

&lt;p&gt;While there is no law against using these color palettes for scientific visualization, you should probably use more standard palette packages such as &lt;a href=&quot;https://github.com/timothyrenner/ColorBrewer.jl&quot;&gt;ColorBrewer.jl&lt;/a&gt; or &lt;a href=&quot;https://github.com/JuliaGraphics/Colors.jl&quot;&gt;Colors.jl&lt;/a&gt;, to ensure you account for proper contrast, colorblind readers and other considerations.&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/NoveltyColors&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/NoveltyColors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/randyzwitch/NoveltyColors.jl&quot;&gt;https://github.com/randyzwitch/NoveltyColors.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;http://randyzwitch.github.io/NoveltyColors.jl/&quot;&gt;http://randyzwitch.github.io/NoveltyColors.jl/&lt;/a&gt;&lt;/p&gt;
</content>
<category term="Julia" />
<summary>A Julia package for fun, non-standard color palettes. Color palettes range from fashion, to movie directors and even community-sourced contributions.</summary>
</entry>
<entry>
<title>Twitter.jl</title>
<link href="/julia/twitter.html" rel="alternate" type="text/html" title="Twitter.jl" />
<published>2016-01-24T00:00:00-05:00</published>
<updated>2016-01-24T00:00:00-05:00</updated>
<id>/julia/twitter</id>
<content type="html" xml:base="/julia/twitter.html">&lt;p&gt;A Julia package for accessing the Twitter API, version v1.1. This package provides for most of the GET and POST methods of the API; the streaming API is not currently supported.&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Twitter&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/randyzwitch/Twitter.jl&quot;&gt;https://github.com/randyzwitch/Twitter.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;https://github.com/randyzwitch/Twitter.jl/blob/master/test/runtests.jl&quot;&gt;https://github.com/randyzwitch/Twitter.jl/blob/master/test/runtests.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;https://dev.twitter.com/rest/public&quot;&gt;https://dev.twitter.com/rest/public&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://randyzwitch.com/twitter-api-julia/&quot;&gt;Introducing Twitter.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
<category term="Julia" />
<summary>A Julia package for accessing the Twitter API, version v1.1. This package provides for most of the GET and POST methods of the API; the streaming API is not currently supported.</summary>
</entry>
<entry>
<title>OAuth.jl</title>
<link href="/julia/oauth.html" rel="alternate" type="text/html" title="OAuth.jl" />
<published>2016-01-23T00:00:00-05:00</published>
<updated>2016-01-23T00:00:00-05:00</updated>
<id>/julia/oauth</id>
<content type="html" xml:base="/julia/oauth.html">&lt;p&gt;A Julia package implementing my reading of the OAuth 1.0a protocol. This package provides the OAuth support for &lt;a href=&quot;https://github.com/randyzwitch/Twitter.jl&quot;&gt;Twitter.jl&lt;/a&gt;, so it should be fairly complete in its implementation (to the extent that Twitter follows the protocol).&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/OAuth&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/OAuth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/randyzwitch/OAuth.jl&quot;&gt;https://github.com/randyzwitch/OAuth.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;https://github.com/randyzwitch/OAuth.jl/blob/master/test/runtests.jl&quot;&gt;https://github.com/randyzwitch/OAuth.jl/blob/master/test/runtests.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;http://tools.ietf.org/html/rfc5849&quot;&gt;http://tools.ietf.org/html/rfc5849&lt;/a&gt;&lt;/p&gt;
</content>
<category term="Julia" />
<summary>A Julia package implementing my reading of the OAuth 1.0a protocol. This package provides the OAuth support for Twitter.jl, so it should be fairly complete in its implementation (to the extent that Twitter follows the protocol).</summary>
</entry>
<entry>
<title>UAParser.jl</title>
<link href="/julia/uaparser.html" rel="alternate" type="text/html" title="UAParser.jl" />
<published>2016-01-22T00:00:00-05:00</published>
<updated>2016-01-22T00:00:00-05:00</updated>
<id>/julia/uaparser</id>
<content type="html" xml:base="/julia/uaparser.html">&lt;p&gt;A Julia package for&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/UAParser&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/UAParser&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/JuliaWeb/UAParser.jl&quot;&gt;https://github.com/JuliaWeb/UAParser.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation:&lt;/p&gt;

&lt;p&gt;API Documentation:&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;
</content>
<category term="Julia" />
<summary>A Julia package for</summary>
</entry>
<entry>
<title>LogParser.jl</title>
<link href="/julia/logparser.html" rel="alternate" type="text/html" title="LogParser.jl" />
<published>2016-01-20T00:00:00-05:00</published>
<updated>2016-01-20T00:00:00-05:00</updated>
<id>/julia/logparser</id>
<content type="html" xml:base="/julia/logparser.html">&lt;p&gt;A Julia package for generating interactive visualizations, using Vega.js as the underlying visualization engine. Vega.jl can be run from the Julia REPL, from inside Jupyter Notebooks, and also works with Interact.jl and Escher.jl.&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/johnmyleswhite/Vega.jl&quot;&gt;https://github.com/johnmyleswhite/Vega.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;http://johnmyleswhite.github.io/Vega.jl/&quot;&gt;http://johnmyleswhite.github.io/Vega.jl/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;https://github.com/vega/vega/wiki&quot;&gt;https://github.com/vega/vega/wiki&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;
</content>
<category term="Julia" />
<summary>A Julia package for generating interactive visualizations, using Vega.js as the underlying visualization engine. Vega.jl can be run from the Julia REPL, from inside Jupyter Notebooks, and also works with Interact.jl and Escher.jl.</summary>
</entry>
<entry>
<title>ECharts.jl</title>
<link href="/julia/echarts.html" rel="alternate" type="text/html" title="ECharts.jl" />
<published>2016-01-18T00:00:00-05:00</published>
<updated>2016-01-18T00:00:00-05:00</updated>
<id>/julia/echarts</id>
<content type="html" xml:base="/julia/echarts.html">&lt;p&gt;A Julia package for generating interactive visualizations, using Vega.js as the underlying visualization engine. Vega.jl can be run from the Julia REPL, from inside Jupyter Notebooks, and also works with Interact.jl and Escher.jl.&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/johnmyleswhite/Vega.jl&quot;&gt;https://github.com/johnmyleswhite/Vega.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;http://johnmyleswhite.github.io/Vega.jl/&quot;&gt;http://johnmyleswhite.github.io/Vega.jl/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;https://github.com/vega/vega/wiki&quot;&gt;https://github.com/vega/vega/wiki&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;
</content>
<category term="Julia" />
<summary>A Julia package for generating interactive visualizations, using Vega.js as the underlying visualization engine. Vega.jl can be run from the Julia REPL, from inside Jupyter Notebooks, and also works with Interact.jl and Escher.jl.</summary>
</entry>
<entry>
<title>H2O.jl</title>
<link href="/julia/h2o.html" rel="alternate" type="text/html" title="H2O.jl" />
<published>2016-01-16T00:00:00-05:00</published>
<updated>2016-01-16T00:00:00-05:00</updated>
<id>/julia/h2o</id>
<content type="html" xml:base="/julia/h2o.html">&lt;p&gt;A Julia package for&lt;/p&gt;

&lt;h3 id=&quot;relevant-links&quot;&gt;Relevant Links&lt;/h3&gt;

&lt;p&gt;Public Repository Link: &lt;a href=&quot;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&quot;&gt;https://github.com/JuliaLang/METADATA.jl/tree/metadata-v2/Vega&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Link: &lt;a href=&quot;https://github.com/johnmyleswhite/Vega.jl&quot;&gt;https://github.com/johnmyleswhite/Vega.jl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Package Documentation: &lt;a href=&quot;http://johnmyleswhite.github.io/Vega.jl/&quot;&gt;http://johnmyleswhite.github.io/Vega.jl/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API Documentation: &lt;a href=&quot;https://github.com/vega/vega/wiki&quot;&gt;https://github.com/vega/vega/wiki&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blog-posts&quot;&gt;Blog Posts&lt;/h3&gt;
</content>
<category term="Julia" />
<summary>A Julia package for</summary>
</entry>
</feed>
